openapi: 3.0.0
servers: 
  - url: /
    description: Main server
info:
  description: Manito API
  version: "1.0"
  title: Manito API
  contact:
    email: b.nagy.balint@gmail.com
paths:
  /version:
    get:
      summary: Returns version information about the service
      operationId: endpoint.get_version.get_version
      responses:
        "200":
          description: Version information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VersionInfo"
  /users:
    get:
      summary: Lists all users
      operationId: endpoint.get_users.get_users
      tags:
        - user
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /user/{user_id}:
    get:
      summary: Returns detailed information about a user
      operationId: endpoint.get_user.get_user
      tags:
        - user
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: User details
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "404":
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicError"
  /user/{user_id}/wallets:
    get:
      summary: Lists wallets of a user
      operationId: endpoint.get_user_wallets.get_user_wallets
      tags:
        - user
        - wallet
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: List of wallets
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wallet"
        "404":
          description: User does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicError"
  /wallet/{wallet_id}:
    get:
      summary: Returns detailed information about a wallet
      operationId: endpoint.get_wallet.get_wallet
      tags:
        - wallet
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Wallet details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Wallet"
        "404":
          description: Wallet does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicError"
  /wallet/{wallet_id}/transactions:
    get:
      summary: Lists transactions for a wallet
      operationId: endpoint.get_wallet_transactions.get_wallet_transactions
      deprecated: true
      tags:
        - wallet
        - transaction
      parameters:
        - name: wallet_id
          in: path
          required: true
          schema:
            type: integer
        - name: from_date
          in: query
          required: false
          schema:
            description: Start date of the search, inclusive. Time is interpreted in the wallet's time settings.
            type: string
            format: date
        - name: to_date
          in: query
          required: false
          schema:
            description: End date of the search, inclusive. Time is interpreted in the wallet's time settings.
            type: string
            format: date
      responses:
        "200":
          description: List of transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        "404":
          description: Wallet does not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicError"
  /transactions/search:
    post:
      summary: Returns a filtered list of transactions 
      operationId: endpoint.post_transactions_search.post_transactions_search
      tags:
        - transaction
      requestBody:
        description: Filter criteria
        required: true
        content: 
          'application/json':
            schema:
              $ref: "#/components/schemas/TransactionSearchParams"
      responses:
        "200":
          description: List of transactions matching the criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transaction"
        "403":
          description: |
            The request was rejected because the filter expression could potentially return information
            that the caller is not authorized for.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BasicError"
components:
  schemas:
    VersionInfo:
      type: object
      description: Version information about the service
      properties:
        version:
          type: string
          example: 1.2.34
      required:
        - version
    DatabaseId:
      type: integer
      description: Database ID
      example: 528491
    User:
      type: object
      description: Information about a user
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/DatabaseId"
            - description: ID of the user.
        name:
          type: string
          description: Name of the user.
          example: Some Body
        created_at:
          type: string
          description: Time when the user account was created.
          format: date-time
        deleted_at:
          type: string
          description: Time when the user account was deleted.
          format: date-time
      required:
        - id
        - name
        - created_at
    Wallet:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/DatabaseId"
            - description: ID of this wallet
        name:
          type: string
          description: Name of the wallet
          example: Bank Account at Shady & Co. Banking Trust
        ownerId:
          allOf:
            - $ref: "#/components/schemas/DatabaseId"
            - description: ID of the user who owns this wallet
      required:
        - id
        - name
        - ownerId
    Transaction:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/DatabaseId"
            - description: ID of this wallet
        description:
          type: string
          description: Notes on this transaction
        time:
          type: string
          format: date-time
          description: UTC time when the transaction took place.
        amount:
          type: number
          description: |
            Amount of money added to the destination wallet and removed from the source wallet and
            deposited into the destination wallet.
        sourceWalletId:
          allOf:
            - $ref: "#/components/schemas/DatabaseId"
            - description: |
                ID of the source wallet. If missing, the transaction is considered to be a deposit
                into the destination wallet from the outside world i.e. outside any of the user's wallets
                within the system.
        destinationWalletId:
          allOf:
            - $ref: "#/components/schemas/DatabaseId"
            - description: |
                ID of the destination wallet. If missing, the transaction is considered to be a withdrawal
                from the source wallet to the outside world i.e. outside any of the user's wallets
                within the system.
      required:
        - id
        - description
        - amount
    TransactionSearchParams:
      type: object
      properties:
        walletId:
          allOf:
            - $ref: "#/components/schemas/DatabaseId"
            - description: |
                Result will only contain transactions for which either the source or the destination wallet's ID
                matches this ID.
        searchString:
          type: string
          description: |
            Result will only contain transactions for which the note field contains this string.
            The search is case-insensitive.
        startDate:
          type: string
          format: date
          description: Start of the time range included in the search, including the specified date.
        endDate:
          type: string
          format: date
          description: End of the time range included in the search, including the specified date.
        minAmount:
          type: number
          description: Minimum amount that was transferred with the transaction.
        maxAmount:
          type: number
          description: Maximum amount that was transferred with the transaction.
      additionalProperties: false
    BasicError:
      type: object
      properties:
        message:
          description: Error message
          type: string
      required:
        - message